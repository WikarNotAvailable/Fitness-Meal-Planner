[2022-10-13 10:43:24.235 +02:00  INF]  User profile is available. Using 'C:\Users\wikar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2022-10-13 10:43:24.524 +02:00  INF]  Initializing UI Database
[2022-10-13 10:43:25.770 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 10:43:26.436 +02:00  INF]  Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
[2022-10-13 10:43:26.530 +02:00  INF]  Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
[2022-10-13 10:43:26.560 +02:00  INF]  Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
[2022-10-13 10:43:27.035 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Configurations] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
[2022-10-13 10:43:27.129 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 10:43:27.400 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/swagger/index.html - -
[2022-10-13 10:43:27.457 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 10:43:27.459 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 10:43:27.463 +02:00  INF]  Application started. Press Ctrl+C to shut down.
[2022-10-13 10:43:27.463 +02:00  INF]  Hosting environment: Development
[2022-10-13 10:43:27.463 +02:00  INF]  Content root path: C:\Users\wikar\OneDrive\Pulpit\PROGRAMOWANIE\Fitness-Meal-Planner\Fitness-Meal-Planner\WebAPI\
[2022-10-13 10:43:27.512 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 10:43:27.513 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 10:43:27.747 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 10:43:27.765 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 16.2782ms
[2022-10-13 10:43:27.987 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/_framework/aspnetcore-browser-refresh.js - -
[2022-10-13 10:43:27.990 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/swagger/index.html - - - 200 - text/html;charset=utf-8 595.7227ms
[2022-10-13 10:43:28.002 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/_framework/aspnetcore-browser-refresh.js - - - 200 11982 application/javascript;+charset=utf-8 12.5600ms
[2022-10-13 10:43:28.025 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/_vs/browserLink - -
[2022-10-13 10:43:28.058 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 10:43:28.075 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 50.2294ms
[2022-10-13 10:43:28.177 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/swagger/v1/swagger.json - -
[2022-10-13 10:43:28.270 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 212.1695ms
[2022-10-13 10:43:28.320 +02:00  INF]  Received HTTP response headers after 799.6033ms - 200
[2022-10-13 10:43:28.323 +02:00  INF]  End processing HTTP request after 821.8336ms - 200
[2022-10-13 10:43:28.443 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 265.8512ms
[2022-10-13 10:43:28.667 +02:00  WRN]  Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
[2022-10-13 10:43:28.733 +02:00  INF]  Executed DbCommand (33ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 10:43:28.811 +02:00  INF]  Executed DbCommand (5ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 10:43:29.241 +02:00  INF]  Executed DbCommand (292ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 10:43:29.250 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 10:43:34.352 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 10:43:34.354 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 10:43:34.354 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 10:43:34.354 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 10:43:34.417 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 10:43:34.418 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 1.3946ms
[2022-10-13 12:05:18.964 +02:00  INF]  User profile is available. Using 'C:\Users\wikar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2022-10-13 12:05:19.650 +02:00  INF]  Initializing UI Database
[2022-10-13 12:05:22.353 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:05:24.279 +02:00  INF]  Executed DbCommand (772ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
[2022-10-13 12:05:24.544 +02:00  INF]  Executed DbCommand (135ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
[2022-10-13 12:05:24.702 +02:00  INF]  Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
[2022-10-13 12:05:26.134 +02:00  INF]  Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Configurations] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
[2022-10-13 12:05:26.412 +02:00  INF]  Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:05:28.549 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/swagger/index.html - -
[2022-10-13 12:05:28.595 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:05:28.644 +02:00  INF]  Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:05:28.651 +02:00  INF]  Application started. Press Ctrl+C to shut down.
[2022-10-13 12:05:28.651 +02:00  INF]  Hosting environment: Development
[2022-10-13 12:05:28.651 +02:00  INF]  Content root path: C:\Users\wikar\OneDrive\Pulpit\PROGRAMOWANIE\Fitness-Meal-Planner\Fitness-Meal-Planner\WebAPI\
[2022-10-13 12:05:28.736 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:05:28.739 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:05:29.305 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:05:29.337 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 29.7890ms
[2022-10-13 12:05:30.980 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/swagger/index.html - - - 200 - text/html;charset=utf-8 2441.3978ms
[2022-10-13 12:05:31.002 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:09:19.271 +02:00  WRN]  No store type was specified for the decimal property 'Calories' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.322 +02:00  WRN]  No store type was specified for the decimal property 'Carbohydrates' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.322 +02:00  WRN]  No store type was specified for the decimal property 'Fat' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.322 +02:00  WRN]  No store type was specified for the decimal property 'Protein' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.322 +02:00  WRN]  No store type was specified for the decimal property 'Calories' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.322 +02:00  WRN]  No store type was specified for the decimal property 'Carbohydrates' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.322 +02:00  WRN]  No store type was specified for the decimal property 'Fat' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.322 +02:00  WRN]  No store type was specified for the decimal property 'Protein' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.443 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'FitnessPlannerContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: None
[2022-10-13 12:09:19.462 +02:00  WRN]  No store type was specified for the decimal property 'Calories' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.462 +02:00  WRN]  No store type was specified for the decimal property 'Carbohydrates' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.462 +02:00  WRN]  No store type was specified for the decimal property 'Fat' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.462 +02:00  WRN]  No store type was specified for the decimal property 'Protein' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.462 +02:00  WRN]  No store type was specified for the decimal property 'Calories' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.463 +02:00  WRN]  No store type was specified for the decimal property 'Carbohydrates' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.463 +02:00  WRN]  No store type was specified for the decimal property 'Fat' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:19.463 +02:00  WRN]  No store type was specified for the decimal property 'Protein' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.644 +02:00  WRN]  No store type was specified for the decimal property 'Calories' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.684 +02:00  WRN]  No store type was specified for the decimal property 'Carbohydrates' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.684 +02:00  WRN]  No store type was specified for the decimal property 'Fat' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.685 +02:00  WRN]  No store type was specified for the decimal property 'Protein' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.685 +02:00  WRN]  No store type was specified for the decimal property 'Calories' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.685 +02:00  WRN]  No store type was specified for the decimal property 'Carbohydrates' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.685 +02:00  WRN]  No store type was specified for the decimal property 'Fat' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.685 +02:00  WRN]  No store type was specified for the decimal property 'Protein' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:09:59.861 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'FitnessPlannerContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: None
[2022-10-13 12:10:00.370 +02:00  INF]  Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
[2022-10-13 12:10:00.404 +02:00  INF]  Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
[2022-10-13 12:10:00.407 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
[2022-10-13 12:10:00.408 +02:00  INF]  Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
[2022-10-13 12:10:00.427 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
[2022-10-13 12:10:00.447 +02:00  INF]  Applying migration '20221013100919_ChangedNameConventionOfColumns'.
[2022-10-13 12:10:00.781 +02:00  INF]  Executed DbCommand (292ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[role]', N'Role', N'COLUMN';
[2022-10-13 12:10:00.783 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[password]', N'Password', N'COLUMN';
[2022-10-13 12:10:00.785 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[lastModifiedBy]', N'LastModifiedBy', N'COLUMN';
[2022-10-13 12:10:00.787 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[lastModified]', N'LastModified', N'COLUMN';
[2022-10-13 12:10:00.789 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[emailAddress]', N'EmailAddress', N'COLUMN';
[2022-10-13 12:10:00.791 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[createdBy]', N'CreatedBy', N'COLUMN';
[2022-10-13 12:10:00.792 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[created]', N'Created', N'COLUMN';
[2022-10-13 12:10:00.794 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Users].[username]', N'Username', N'COLUMN';
[2022-10-13 12:10:00.797 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[weightInGrams]', N'WeightInGrams', N'COLUMN';
[2022-10-13 12:10:00.799 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[protein]', N'Protein', N'COLUMN';
[2022-10-13 12:10:00.800 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[productPhotoPath]', N'ProductPhotoPath', N'COLUMN';
[2022-10-13 12:10:00.802 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[name]', N'Name', N'COLUMN';
[2022-10-13 12:10:00.803 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[lastModifiedBy]', N'LastModifiedBy', N'COLUMN';
[2022-10-13 12:10:00.805 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[lastModified]', N'LastModified', N'COLUMN';
[2022-10-13 12:10:00.807 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[ingredients]', N'Ingredients', N'COLUMN';
[2022-10-13 12:10:00.808 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[fat]', N'Fat', N'COLUMN';
[2022-10-13 12:10:00.810 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[description]', N'Description', N'COLUMN';
[2022-10-13 12:10:00.811 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[createdBy]', N'CreatedBy', N'COLUMN';
[2022-10-13 12:10:00.812 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[created]', N'Created', N'COLUMN';
[2022-10-13 12:10:00.814 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[carbohydrates]', N'Carbohydrates', N'COLUMN';
[2022-10-13 12:10:00.815 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[calories]', N'Calories', N'COLUMN';
[2022-10-13 12:10:00.816 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Products].[id]', N'Id', N'COLUMN';
[2022-10-13 12:10:00.819 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[weightInGrams]', N'WeightInGrams', N'COLUMN';
[2022-10-13 12:10:00.821 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[recipe]', N'Recipe', N'COLUMN';
[2022-10-13 12:10:00.822 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[protein]', N'Protein', N'COLUMN';
[2022-10-13 12:10:00.823 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[name]', N'Name', N'COLUMN';
[2022-10-13 12:10:00.824 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[mealPhotoPath]', N'MealPhotoPath', N'COLUMN';
[2022-10-13 12:10:00.825 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[lastModifiedBy]', N'LastModifiedBy', N'COLUMN';
[2022-10-13 12:10:00.827 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[lastModified]', N'LastModified', N'COLUMN';
[2022-10-13 12:10:00.828 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[ingredients]', N'Ingredients', N'COLUMN';
[2022-10-13 12:10:00.829 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[fat]', N'Fat', N'COLUMN';
[2022-10-13 12:10:00.831 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[createdBy]', N'CreatedBy', N'COLUMN';
[2022-10-13 12:10:00.832 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[created]', N'Created', N'COLUMN';
[2022-10-13 12:10:00.833 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[carbohydrates]', N'Carbohydrates', N'COLUMN';
[2022-10-13 12:10:00.834 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[calories]', N'Calories', N'COLUMN';
[2022-10-13 12:10:00.835 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[Meals].[id]', N'Id', N'COLUMN';
[2022-10-13 12:10:00.841 +02:00  INF]  Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20221013100919_ChangedNameConventionOfColumns', N'6.0.9');
[2022-10-13 12:12:08.784 +02:00  INF]  User profile is available. Using 'C:\Users\wikar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2022-10-13 12:12:09.145 +02:00  INF]  Initializing UI Database
[2022-10-13 12:12:10.892 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:11.897 +02:00  INF]  Executed DbCommand (97ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
[2022-10-13 12:12:12.095 +02:00  INF]  Executed DbCommand (122ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
[2022-10-13 12:12:12.153 +02:00  INF]  Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
[2022-10-13 12:12:12.801 +02:00  INF]  Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Configurations] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
[2022-10-13 12:12:12.871 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:13.290 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/swagger/index.html - -
[2022-10-13 12:12:13.367 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:13.373 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:13.378 +02:00  INF]  Application started. Press Ctrl+C to shut down.
[2022-10-13 12:12:13.378 +02:00  INF]  Hosting environment: Development
[2022-10-13 12:12:13.378 +02:00  INF]  Content root path: C:\Users\wikar\OneDrive\Pulpit\PROGRAMOWANIE\Fitness-Meal-Planner\Fitness-Meal-Planner\WebAPI\
[2022-10-13 12:12:13.451 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:13.452 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:13.765 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:13.779 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 11.2721ms
[2022-10-13 12:12:14.140 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/swagger/index.html - - - 200 - text/html;charset=utf-8 856.2034ms
[2022-10-13 12:12:14.179 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/_framework/aspnetcore-browser-refresh.js - -
[2022-10-13 12:12:14.187 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/_framework/aspnetcore-browser-refresh.js - - - 200 11982 application/javascript;+charset=utf-8 7.3503ms
[2022-10-13 12:12:14.211 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:14.215 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/_vs/browserLink - -
[2022-10-13 12:12:14.427 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 212.4077ms
[2022-10-13 12:12:14.543 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/swagger/v1/swagger.json - -
[2022-10-13 12:12:14.558 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 347.1211ms
[2022-10-13 12:12:14.611 +02:00  INF]  Received HTTP response headers after 1149.8268ms - 200
[2022-10-13 12:12:14.615 +02:00  INF]  End processing HTTP request after 1178.0177ms - 200
[2022-10-13 12:12:14.882 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 339.4371ms
[2022-10-13 12:12:15.024 +02:00  WRN]  Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
[2022-10-13 12:12:15.213 +02:00  INF]  Executed DbCommand (121ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:15.304 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:15.679 +02:00  INF]  Executed DbCommand (158ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:15.701 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:20.837 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:20.840 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:20.840 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:20.840 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:20.939 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:20.942 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 2.6111ms
[2022-10-13 12:12:20.989 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:20.997 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 6.1557ms
[2022-10-13 12:12:21.025 +02:00  INF]  Received HTTP response headers after 184.1791ms - 200
[2022-10-13 12:12:21.025 +02:00  INF]  End processing HTTP request after 184.5212ms - 200
[2022-10-13 12:12:21.031 +02:00  INF]  Executed DbCommand (5ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:21.033 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:21.036 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:21.039 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:26.042 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:26.044 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:26.044 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:26.044 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:26.080 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:26.082 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 0.9260ms
[2022-10-13 12:12:26.135 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:26.174 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 9.8859ms
[2022-10-13 12:12:26.174 +02:00  INF]  Received HTTP response headers after 129.3127ms - 200
[2022-10-13 12:12:26.174 +02:00  INF]  End processing HTTP request after 129.6552ms - 200
[2022-10-13 12:12:26.182 +02:00  INF]  Executed DbCommand (7ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:26.184 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:26.188 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:26.190 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:31.202 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:31.205 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:31.206 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:31.206 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:31.256 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:31.257 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 1.0796ms
[2022-10-13 12:12:31.326 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:31.330 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 2.8362ms
[2022-10-13 12:12:31.351 +02:00  INF]  Received HTTP response headers after 144.6391ms - 200
[2022-10-13 12:12:31.351 +02:00  INF]  End processing HTTP request after 145.0591ms - 200
[2022-10-13 12:12:31.357 +02:00  INF]  Executed DbCommand (6ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:31.359 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:31.364 +02:00  INF]  Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:31.367 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:36.376 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:36.378 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:36.378 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:36.378 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:36.431 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:36.433 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 2.0290ms
[2022-10-13 12:12:36.518 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:36.562 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 43.9972ms
[2022-10-13 12:12:36.562 +02:00  INF]  Received HTTP response headers after 183.3187ms - 200
[2022-10-13 12:12:36.562 +02:00  INF]  End processing HTTP request after 183.7244ms - 200
[2022-10-13 12:12:36.567 +02:00  INF]  Executed DbCommand (4ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:36.569 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:36.572 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:36.574 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:38.945 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/meals/all - -
[2022-10-13 12:12:38.972 +02:00  INF]  Executing endpoint 'WebAPI.Controllers.MealsController.GetAllMeals (WebAPI)'
[2022-10-13 12:12:39.026 +02:00  INF]  Route matched with {action = "GetAllMeals", controller = "Meals"}. Executing controller action with signature System.Linq.IQueryable`1[Application.Dtos.MealDtos.MealDto] GetAllMeals() on controller WebAPI.Controllers.MealsController (WebAPI).
[2022-10-13 12:12:41.072 +02:00  INF]  Executing action method WebAPI.Controllers.MealsController.GetAllMeals (WebAPI) - Validation state: "Valid"
[2022-10-13 12:12:41.072 +02:00  INF]  Getting all meals from database as queryable.
[2022-10-13 12:12:41.105 +02:00  WRN]  No store type was specified for the decimal property 'Calories' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:12:41.106 +02:00  WRN]  No store type was specified for the decimal property 'Carbohydrates' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:12:41.106 +02:00  WRN]  No store type was specified for the decimal property 'Fat' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:12:41.106 +02:00  WRN]  No store type was specified for the decimal property 'Protein' on entity type 'Meal'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:12:41.106 +02:00  WRN]  No store type was specified for the decimal property 'Calories' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:12:41.106 +02:00  WRN]  No store type was specified for the decimal property 'Carbohydrates' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:12:41.106 +02:00  WRN]  No store type was specified for the decimal property 'Fat' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:12:41.106 +02:00  WRN]  No store type was specified for the decimal property 'Protein' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
[2022-10-13 12:12:41.122 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'FitnessPlannerContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: None
[2022-10-13 12:12:41.198 +02:00  INF]  Executed action method WebAPI.Controllers.MealsController.GetAllMeals (WebAPI), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 107.2006ms.
[2022-10-13 12:12:41.257 +02:00  INF]  Executing ObjectResult, writing value of type 'Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[Application.Dtos.MealDtos.MealDto, Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2022-10-13 12:12:41.323 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[Id], [m].[Name], [m].[WeightInGrams], [m].[Calories], [m].[Protein], [m].[Carbohydrates], [m].[Fat], [m].[Ingredients], [m].[Recipe]
FROM [Meals] AS [m]
[2022-10-13 12:12:41.577 +02:00  INF]  Executed action WebAPI.Controllers.MealsController.GetAllMeals (WebAPI) in 2542.3026ms
[2022-10-13 12:12:41.578 +02:00  INF]  Executed endpoint 'WebAPI.Controllers.MealsController.GetAllMeals (WebAPI)'
[2022-10-13 12:12:41.589 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:41.591 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:41.592 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:41.592 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:41.593 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/meals/all - - - 200 545 application/json;+charset=utf-8 2647.1778ms
[2022-10-13 12:12:41.650 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:41.651 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 0.9365ms
[2022-10-13 12:12:41.719 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:41.750 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 31.3984ms
[2022-10-13 12:12:41.798 +02:00  INF]  Received HTTP response headers after 205.8938ms - 200
[2022-10-13 12:12:41.799 +02:00  INF]  End processing HTTP request after 207.6472ms - 200
[2022-10-13 12:12:41.815 +02:00  INF]  Executed DbCommand (15ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:41.819 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:41.826 +02:00  INF]  Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:41.833 +02:00  INF]  Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:46.837 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:46.839 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:46.839 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:46.839 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:46.887 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:46.889 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 1.1450ms
[2022-10-13 12:12:46.936 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:46.942 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 4.7709ms
[2022-10-13 12:12:46.962 +02:00  INF]  Received HTTP response headers after 123.2693ms - 200
[2022-10-13 12:12:46.962 +02:00  INF]  End processing HTTP request after 123.5763ms - 200
[2022-10-13 12:12:46.968 +02:00  INF]  Executed DbCommand (5ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:46.971 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:46.975 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:46.978 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:51.989 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:51.991 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:51.992 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:51.992 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:52.029 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:52.031 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 1.1065ms
[2022-10-13 12:12:52.073 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:52.078 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 4.6648ms
[2022-10-13 12:12:52.111 +02:00  INF]  Received HTTP response headers after 119.14ms - 200
[2022-10-13 12:12:52.111 +02:00  INF]  End processing HTTP request after 119.4826ms - 200
[2022-10-13 12:12:52.118 +02:00  INF]  Executed DbCommand (6ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:52.121 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:52.125 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:52.128 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:57.139 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:12:57.142 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:12:57.142 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:57.142 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:12:57.173 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:12:57.175 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 1.2082ms
[2022-10-13 12:12:57.238 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:12:57.244 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 4.9827ms
[2022-10-13 12:12:57.267 +02:00  INF]  Received HTTP response headers after 124.894ms - 200
[2022-10-13 12:12:57.267 +02:00  INF]  End processing HTTP request after 125.1129ms - 200
[2022-10-13 12:12:57.271 +02:00  INF]  Executed DbCommand (4ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:57.274 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:12:57.277 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:12:57.279 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:13:02.290 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:13:02.292 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:13:02.292 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:13:02.292 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:13:02.335 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:13:02.349 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 2.5290ms
[2022-10-13 12:13:02.413 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:13:02.418 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 3.9620ms
[2022-10-13 12:13:02.441 +02:00  INF]  Received HTTP response headers after 148.9475ms - 200
[2022-10-13 12:13:02.441 +02:00  INF]  End processing HTTP request after 149.3674ms - 200
[2022-10-13 12:13:02.447 +02:00  INF]  Executed DbCommand (5ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:13:02.450 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:13:02.453 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:13:02.455 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:13:07.467 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:13:07.469 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:13:07.469 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:13:07.469 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:13:07.507 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:13:07.509 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 0.7576ms
[2022-10-13 12:13:07.550 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:13:07.556 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 4.7721ms
[2022-10-13 12:13:07.575 +02:00  INF]  Received HTTP response headers after 105.6714ms - 200
[2022-10-13 12:13:07.575 +02:00  INF]  End processing HTTP request after 106.0666ms - 200
[2022-10-13 12:13:07.580 +02:00  INF]  Executed DbCommand (4ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:13:07.583 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:13:07.586 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:13:07.587 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:15:37.257 +02:00  INF]  User profile is available. Using 'C:\Users\wikar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2022-10-13 12:15:37.732 +02:00  INF]  Initializing UI Database
[2022-10-13 12:15:41.405 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:15:43.406 +02:00  INF]  Executed DbCommand (84ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
[2022-10-13 12:15:43.550 +02:00  INF]  Executed DbCommand (83ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
[2022-10-13 12:15:43.592 +02:00  INF]  Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
[2022-10-13 12:15:44.182 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Configurations] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
[2022-10-13 12:15:44.242 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:15:44.734 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:15:44.731 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/swagger/index.html - -
[2022-10-13 12:15:44.754 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:15:44.757 +02:00  INF]  Application started. Press Ctrl+C to shut down.
[2022-10-13 12:15:44.758 +02:00  INF]  Hosting environment: Development
[2022-10-13 12:15:44.758 +02:00  INF]  Content root path: C:\Users\wikar\OneDrive\Pulpit\PROGRAMOWANIE\Fitness-Meal-Planner\Fitness-Meal-Planner\WebAPI\
[2022-10-13 12:15:44.821 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:15:44.824 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:15:45.186 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:15:45.198 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 10.5089ms
[2022-10-13 12:15:45.530 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:15:45.695 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/_framework/aspnetcore-browser-refresh.js - -
[2022-10-13 12:15:45.724 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/_vs/browserLink - -
[2022-10-13 12:15:45.733 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/_framework/aspnetcore-browser-refresh.js - - - 200 11982 application/javascript;+charset=utf-8 36.9224ms
[2022-10-13 12:15:45.749 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/swagger/index.html - - - 200 - text/html;charset=utf-8 1057.2434ms
[2022-10-13 12:15:45.868 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 337.5515ms
[2022-10-13 12:15:45.925 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 200.3604ms
[2022-10-13 12:15:45.933 +02:00  INF]  Received HTTP response headers after 1101.6938ms - 200
[2022-10-13 12:15:45.935 +02:00  INF]  End processing HTTP request after 1129.9034ms - 200
[2022-10-13 12:15:45.987 +02:00  INF]  Request starting HTTP/2 GET https://localhost:44300/swagger/v1/swagger.json - -
[2022-10-13 12:15:46.294 +02:00  INF]  Request finished HTTP/2 GET https://localhost:44300/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 306.9546ms
[2022-10-13 12:15:46.382 +02:00  WRN]  Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
[2022-10-13 12:15:46.519 +02:00  INF]  Executed DbCommand (88ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:15:46.666 +02:00  INF]  Executed DbCommand (4ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:15:47.043 +02:00  INF]  Executed DbCommand (189ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:15:47.066 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:15:52.224 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:15:52.232 +02:00  INF]  Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:15:52.234 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:15:52.234 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:15:52.361 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:15:52.364 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 3.2441ms
[2022-10-13 12:15:52.427 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:15:52.458 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 6.6916ms
[2022-10-13 12:15:52.458 +02:00  INF]  Received HTTP response headers after 223.7282ms - 200
[2022-10-13 12:15:52.458 +02:00  INF]  End processing HTTP request after 224.193ms - 200
[2022-10-13 12:15:52.464 +02:00  INF]  Executed DbCommand (5ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:15:52.466 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:15:52.470 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:15:52.471 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:15:57.495 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:15:57.497 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:15:57.498 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:15:57.498 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:15:57.563 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:15:57.564 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 0.8929ms
[2022-10-13 12:15:57.616 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:15:57.669 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 8.5766ms
[2022-10-13 12:15:57.669 +02:00  INF]  Received HTTP response headers after 171.1402ms - 200
[2022-10-13 12:15:57.669 +02:00  INF]  End processing HTTP request after 171.4022ms - 200
[2022-10-13 12:15:57.676 +02:00  INF]  Executed DbCommand (7ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:15:57.679 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:15:57.683 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:15:57.686 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:16:02.706 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:16:02.708 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:16:02.708 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:16:02.709 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:16:02.754 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:16:02.755 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 0.8104ms
[2022-10-13 12:16:02.815 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:16:02.850 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 6.0082ms
[2022-10-13 12:16:02.850 +02:00  INF]  Received HTTP response headers after 141.7122ms - 200
[2022-10-13 12:16:02.850 +02:00  INF]  End processing HTTP request after 142.0185ms - 200
[2022-10-13 12:16:02.857 +02:00  INF]  Executed DbCommand (6ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:16:02.859 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:16:02.863 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:16:02.866 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:16:07.871 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:16:07.873 +02:00  INF]  Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:16:07.873 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:16:07.873 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:16:07.907 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:16:07.909 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 1.0123ms
[2022-10-13 12:16:07.955 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:16:07.959 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 2.8863ms
[2022-10-13 12:16:07.985 +02:00  INF]  Received HTTP response headers after 112.3035ms - 200
[2022-10-13 12:16:07.985 +02:00  INF]  End processing HTTP request after 112.6139ms - 200
[2022-10-13 12:16:07.993 +02:00  INF]  Executed DbCommand (7ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:16:07.995 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:16:07.999 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:16:08.001 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:16:13.006 +02:00  INF]  Entity Framework Core 6.0.9 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.9' with options: MigrationsAssembly=HealthChecks.UI.SqlServer.Storage 
[2022-10-13 12:16:13.008 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[DiscoveryService], [c].[Name], [c].[Uri]
FROM [Configurations] AS [c]
[2022-10-13 12:16:13.009 +02:00  INF]  Start processing HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:16:13.009 +02:00  INF]  Sending HTTP request GET "http://localhost:1362/healthUI"
[2022-10-13 12:16:13.067 +02:00  INF]  Request starting HTTP/1.1 GET http://localhost:1362/healthUI - -
[2022-10-13 12:16:13.067 +02:00  INF]  Request finished HTTP/1.1 GET http://localhost:1362/healthUI - - - 307 - - 0.8305ms
[2022-10-13 12:16:13.131 +02:00  INF]  Request starting HTTP/1.1 GET https://localhost:44300/healthUI - -
[2022-10-13 12:16:13.135 +02:00  INF]  Request finished HTTP/1.1 GET https://localhost:44300/healthUI - - - 200 - application/json 4.3715ms
[2022-10-13 12:16:13.171 +02:00  INF]  Received HTTP response headers after 161.9338ms - 200
[2022-10-13 12:16:13.171 +02:00  INF]  End processing HTTP request after 162.3953ms - 200
[2022-10-13 12:16:13.179 +02:00  INF]  Executed DbCommand (7ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:16:13.181 +02:00  INF]  Executed DbCommand (2ms) [Parameters=[@__configuration_Name_0='?' (Size = 500)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DiscoveryService], [t].[LastExecuted], [t].[Name], [t].[OnStateFrom], [t].[Status], [t].[Uri], [h].[Id], [h].[Description], [h].[HealthCheckExecutionId], [h].[Name], [h].[On], [h].[Status], [h0].[Id], [h0].[Description], [h0].[Duration], [h0].[HealthCheckExecutionId], [h0].[Name], [h0].[Status], [h0].[Tags]
FROM (
    SELECT TOP(2) [e].[Id], [e].[DiscoveryService], [e].[LastExecuted], [e].[Name], [e].[OnStateFrom], [e].[Status], [e].[Uri]
    FROM [Executions] AS [e]
    WHERE [e].[Name] = @__configuration_Name_0
) AS [t]
LEFT JOIN [HealthCheckExecutionHistories] AS [h] ON [t].[Id] = [h].[HealthCheckExecutionId]
LEFT JOIN [HealthCheckExecutionEntries] AS [h0] ON [t].[Id] = [h0].[HealthCheckExecutionId]
ORDER BY [t].[Id], [h].[Id]
[2022-10-13 12:16:13.185 +02:00  INF]  Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Executions] SET [LastExecuted] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
[2022-10-13 12:16:13.357 +02:00  INF]  Executed DbCommand (172ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [HealthCheckExecutionEntries] SET [Duration] = @p0
WHERE [Id] = @p1;
SELECT @@ROWCOUNT;
